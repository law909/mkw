<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PartnerMIJSZPune extends \Entities\PartnerMIJSZPune implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'id', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'partner', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'ev', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'honap', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'tol', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'ig', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'napszam'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'id', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'partner', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'ev', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'honap', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'tol', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'ig', '' . "\0" . 'Entities\\PartnerMIJSZPune' . "\0" . 'napszam'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PartnerMIJSZPune $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function toLista()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toLista', []);

        return parent::toLista();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartner', []);

        return parent::getPartner();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerId', []);

        return parent::getPartnerId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerNev()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerNev', []);

        return parent::getPartnerNev();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartner($partner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartner', [$partner]);

        return parent::setPartner($partner);
    }

    /**
     * {@inheritDoc}
     */
    public function getEv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEv', []);

        return parent::getEv();
    }

    /**
     * {@inheritDoc}
     */
    public function setEv($ev)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEv', [$ev]);

        return parent::setEv($ev);
    }

    /**
     * {@inheritDoc}
     */
    public function getHonap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHonap', []);

        return parent::getHonap();
    }

    /**
     * {@inheritDoc}
     */
    public function setHonap($honap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHonap', [$honap]);

        return parent::setHonap($honap);
    }

    /**
     * {@inheritDoc}
     */
    public function getNapszam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNapszam', []);

        return parent::getNapszam();
    }

    /**
     * {@inheritDoc}
     */
    public function setNapszam($napszam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNapszam', [$napszam]);

        return parent::setNapszam($napszam);
    }

    /**
     * {@inheritDoc}
     */
    public function getTol()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTol', []);

        return parent::getTol();
    }

    /**
     * {@inheritDoc}
     */
    public function getTolStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTolStr', []);

        return parent::getTolStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getTolEngStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTolEngStr', []);

        return parent::getTolEngStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setTol($adat = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTol', [$adat]);

        return parent::setTol($adat);
    }

    /**
     * {@inheritDoc}
     */
    public function getIg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIg', []);

        return parent::getIg();
    }

    /**
     * {@inheritDoc}
     */
    public function getIgStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIgStr', []);

        return parent::getIgStr();
    }

    /**
     * {@inheritDoc}
     */
    public function getIgEngStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIgEngStr', []);

        return parent::getIgEngStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setIg($adat = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIg', [$adat]);

        return parent::setIg($adat);
    }

}
