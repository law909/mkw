<?php

namespace Proxies\__CG__\Entities;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Penztarbizonylattetel extends \Entities\Penztarbizonylattetel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'id', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'created', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'lastmod', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'bizonylatfej', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'hivatkozottdatum', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'rontott', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'netto', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'afa', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'brutto', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'jogcim', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'jogcimnev', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'hivatkozottbizonylat', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'szoveg', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'folyoszamlak'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'id', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'created', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'lastmod', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'bizonylatfej', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'hivatkozottdatum', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'rontott', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'netto', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'afa', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'brutto', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'jogcim', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'jogcimnev', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'hivatkozottbizonylat', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'szoveg', '' . "\0" . 'Entities\\Penztarbizonylattetel' . "\0" . 'folyoszamlak'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Penztarbizonylattetel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBizonylatfej()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBizonylatfej', []);

        return parent::getBizonylatfej();
    }

    /**
     * {@inheritDoc}
     */
    public function getBizonylatfejId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBizonylatfejId', []);

        return parent::getBizonylatfejId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBizonylatfej($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBizonylatfej', [$val]);

        return parent::setBizonylatfej($val);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBizonylatfej()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBizonylatfej', []);

        return parent::removeBizonylatfej();
    }

    /**
     * {@inheritDoc}
     */
    public function getFolyoszamlak()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFolyoszamlak', []);

        return parent::getFolyoszamlak();
    }

    /**
     * {@inheritDoc}
     */
    public function addFolyoszamla(\Entities\Folyoszamla $val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFolyoszamla', [$val]);

        return parent::addFolyoszamla($val);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFolyoszamla(\Entities\Folyoszamla $val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFolyoszamla', [$val]);

        return parent::removeFolyoszamla($val);
    }

    /**
     * {@inheritDoc}
     */
    public function clearFolyoszamlak()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearFolyoszamlak', []);

        return parent::clearFolyoszamlak();
    }

    /**
     * {@inheritDoc}
     */
    public function getHivatkozottbizonylat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHivatkozottbizonylat', []);

        return parent::getHivatkozottbizonylat();
    }

    /**
     * {@inheritDoc}
     */
    public function setHivatkozottbizonylat($hivatkozottbizonylat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHivatkozottbizonylat', [$hivatkozottbizonylat]);

        return parent::setHivatkozottbizonylat($hivatkozottbizonylat);
    }

    /**
     * {@inheritDoc}
     */
    public function getAfa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAfa', []);

        return parent::getAfa();
    }

    /**
     * {@inheritDoc}
     */
    public function setAfa($afa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAfa', [$afa]);

        return parent::setAfa($afa);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrutto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrutto', []);

        return parent::getBrutto();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrutto($brutto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrutto', [$brutto]);

        return parent::setBrutto($brutto);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function clearCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearCreated', []);

        return parent::clearCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastmod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastmod', []);

        return parent::getLastmod();
    }

    /**
     * {@inheritDoc}
     */
    public function clearLastmod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearLastmod', []);

        return parent::clearLastmod();
    }

    /**
     * {@inheritDoc}
     */
    public function getNetto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetto', []);

        return parent::getNetto();
    }

    /**
     * {@inheritDoc}
     */
    public function setNetto($netto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNetto', [$netto]);

        return parent::setNetto($netto);
    }

    /**
     * {@inheritDoc}
     */
    public function getRontott()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRontott', []);

        return parent::getRontott();
    }

    /**
     * {@inheritDoc}
     */
    public function setRontott($rontott)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRontott', [$rontott]);

        return parent::setRontott($rontott);
    }

    /**
     * {@inheritDoc}
     */
    public function getJogcimnev()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJogcimnev', []);

        return parent::getJogcimnev();
    }

    /**
     * {@inheritDoc}
     */
    public function getJogcimId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJogcimId', []);

        return parent::getJogcimId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJogcimnev($jogcimnev)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJogcimnev', [$jogcimnev]);

        return parent::setJogcimnev($jogcimnev);
    }

    /**
     * {@inheritDoc}
     */
    public function getJogcim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJogcim', []);

        return parent::getJogcim();
    }

    /**
     * {@inheritDoc}
     */
    public function setJogcim($jogcim)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJogcim', [$jogcim]);

        return parent::setJogcim($jogcim);
    }

    /**
     * {@inheritDoc}
     */
    public function getHivatkozottdatum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHivatkozottdatum', []);

        return parent::getHivatkozottdatum();
    }

    /**
     * {@inheritDoc}
     */
    public function getHivatkozottdatumStr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHivatkozottdatumStr', []);

        return parent::getHivatkozottdatumStr();
    }

    /**
     * {@inheritDoc}
     */
    public function setHivatkozottdatum($adat = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHivatkozottdatum', [$adat]);

        return parent::setHivatkozottdatum($adat);
    }

    /**
     * {@inheritDoc}
     */
    public function getSzoveg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSzoveg', []);

        return parent::getSzoveg();
    }

    /**
     * {@inheritDoc}
     */
    public function setSzoveg($szoveg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSzoveg', [$szoveg]);

        return parent::setSzoveg($szoveg);
    }

}
